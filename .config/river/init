#!/usr/bin/env sh

# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

export XDG_CURRENT_DESKTOP=river

# Read colour settings
source ${XDG_CONFIG_HOME}/river/colours

# Use the "logo" key as the primary modifier
logo="Mod4"

# Application launcher
launcher="bemenu-run --bottom --prompt '' --tb \"#$base00\" --tf \"#$base05\" --nb \"#$base00\" --nf \"#$base05\" --hb \"#$base0D\" --hf \"#$base00\" --ff \"#$base0A\""
echo "DEBUG launcher=$launcher"

riverctl map normal $logo+Shift Slash spawn "/home/amy/bin/key-help /home/amy/dotWombat/.config/river" # show key map

riverctl map normal $logo Return spawn "$launcher" # start launcher

riverctl map normal $logo+Shift Return spawn alacritty # launch terminal

riverctl map normal $logo Delete close # close focused view

riverctl map normal $logo+Control Q exit # exit river

riverctl map normal $logo Up focus-view next # focus next view in layout stack
riverctl map normal $logo Down focus-view previous # focus previous view in layout stack

riverctl map normal $logo+Shift Up swap next # swap the focused view with the next view in the layout stack
riverctl map normal $logo+Shift Down swap previous # swap the focused view with the previous view in the layout stack

riverctl map normal $logo Right focus-output next # focus the next monitor
riverctl map normal $logo Left focus-output previous # focus the previous monitor

riverctl map normal $logo+Shift Right send-to-output next # send focused view to next monitor
riverctl map normal $logo+Shift Left send-to-output previous # send focused view to previous monitor

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    riverctl map normal $logo $i set-focused-tags $tags # focus tag i
    riverctl map normal $logo+Shift $i set-view-tags $tags # tag focused view with tag i
    riverctl map normal $logo+Control $i toggle-focused-tags $tags # toggle focus of tag i
    riverctl map normal $logo+Shift+Control $i toggle-view-tags $tags # toggle tag i of focused view
done

all_tags=$(((1 << 32) - 1))
riverctl map normal $logo 0 set-focused-tags $all_tags # focus all tags
riverctl map normal $logo+Shift 0 set-view-tags $all_tags # tag focused view with all tags

riverctl map normal $logo f toggle-float # toggle float
riverctl map normal $logo+Shift F toggle-fullscreen # toggle fullscreen


# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

riverctl map normal $logo F11 enter-mode passthrough # enter passthrough mode
riverctl map passthrough $logo F11 enter-mode normal # leave passthrough mode

# # Various media key mapping examples for both normal and locked mode which do
# # not have a modifier
# for mode in normal locked
# do
#     # Eject the optical drive (well if you still have one that is)
#     riverctl map $mode None XF86Eject spawn 'eject -T'

#     # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
#     riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5'
#     riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
#     riverctl map $mode None XF86AudioMute         spawn 'pamixer --toggle-mute'

#     # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
#     riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
#     riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
#     riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
#     riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

#     # Control screen backlight brighness with light (https://github.com/haikarainen/light)
#     riverctl map $mode None XF86MonBrightnessUp   spawn 'light -A 5'
#     riverctl map $mode None XF86MonBrightnessDown spawn 'light -U 5'
# done

# Set background and border color
riverctl background-color 0x${base00}
riverctl border-color-focused 0x${base0D}
riverctl border-color-unfocused 0x${base03}
riverctl border-width 6

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make certain views start floating
riverctl float-filter-add app-id float
riverctl float-filter-add title "popup title with spaces"

# Set app-ids and titles of views which should use client side decorations
# riverctl csd-filter-add app-id "gedit"

# Set monitor configuration
wlr-randr --output DP-1 --pos 0,0
wlr-randr --output DP-2 --pos 2560,0

#riverctl spawn 'waybar'
exec waybar

# Set and exec into the default layout generator, rivertile.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
exec rivertile -view-padding 2 -main-ratio 0.5 -main-location right



