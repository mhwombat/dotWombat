# Read `man 5 sway` for a complete reference.

### Variables
#
# Mod4 is logo key. Use Mod1 for Alt.
set $logo Mod4

# Read colour scheme
include colours

# Your preferred terminal emulator
# set $term foot
set $term alacritty

# Your preferred application launcher
set $menu bemenu-run --bottom --prompt "" --tb "$base00" --tf "$base05" --nb "$base00" --nf "$base05" --hb "$base0D" --hf "$base00" --ff "$base0A"

### Output configuration
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
# Read `man 5 sway-output` for more information about this section.

output "Dell Inc. DELL U2719DC 7H61TS2" {
    position 0 0
}

output "Dell Inc. DELL U2717D J0XYN6B5602S" {
    position 2560 0
}


### Input configuration
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
# To see all keyboard layouts: localectl list-x11-keymap-layouts
# To see all keyboard variants: localectl list-x11-keymap-variants
# To see all keyboard options: localectl list-x11-keymap-options
input type:keyboard {
    xkb_layout ie,gr
    xkb_variant CloGaelach,
    xkb_options compose:rctrl-altgr,grp:alt_caps_toggle
    # Alt+CapsLock switches between keyboard layouts.
}

### Key bindings
#
# Basics:
#
    bindsym $logo+Shift+Slash exec /home/amy/bin/keyhelp # Show key help
    bindsym Pause exec swaylock                          # Lock screen
    bindsym Ctrl+$logo+r reload
    bindsym Ctrl+$logo+q exec swaynag -t warning -m 'Do you really want to exit sway?' -b 'Yes' 'swaymsg exit' # Exit sway and log out

    bindsym $logo+Return exec $menu       # Show launch menu
    bindsym $logo+Shift+Return exec $term # Launch terminal
    bindsym $logo+Delete kill             # Kill focused window

    bindsym Ctrl+$logo+Return exec /home/amy/bin/sway-tree-switcher # Window menu

    # Drag floating windows by holding down $logo and left mouse button.
    # Resize them with right mouse button + $logo.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $logo normal

#
# Moving around:
#
    bindsym $logo+Left focus left   # Move focus left
    bindsym $logo+Right focus right # Move focus right
    bindsym $logo+Up focus up       # Move focus up
    bindsym $logo+Down focus down   # Move focus down

    # Weirdly, adding a comment to these lines breaks the key mapping
    bindsym $logo+Shift+Left move left
    bindsym $logo+Shift+Right move right
    bindsym $logo+Shift+Up move up
    bindsym $logo+Shift+Down move down

#
# Workspaces:
#
    bindsym $logo+1 workspace number 1
    bindsym $logo+2 workspace number 2
    bindsym $logo+3 workspace number 3
    bindsym $logo+4 workspace number 4
    bindsym $logo+5 workspace number 5
    bindsym $logo+e workspace "emacs"
    bindsym $logo+h workspace "haskell"
    bindsym $logo+m workspace "maths"
    bindsym $logo+n workspace "nixos"
    bindsym $logo+p workspace "play"
    bindsym $logo+s workspace "sway"
    bindsym $logo+v workspace "vmware"

    bindsym $logo+Shift+1 move container to workspace number 1
    bindsym $logo+Shift+2 move container to workspace number 2
    bindsym $logo+Shift+3 move container to workspace number 3
    bindsym $logo+Shift+4 move container to workspace number 4
    bindsym $logo+Shift+5 move container to workspace number 5
    bindsym $logo+Shift+e move container to workspace "emacs"
    bindsym $logo+Shift+h move container to workspace "haskell"
    bindsym $logo+Shift+m move container to workspace "maths"
    bindsym $logo+Shift+n move container to workspace "nixos"
    bindsym $logo+Shift+p move container to workspace "play"
    bindsym $logo+Shift+s move container to workspace "sway"
    bindsym $logo+Shift+v move container to workspace "vmware"

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $logo+b or $logo+v, for horizontal and vertical splits
    # respectively.
    # bindsym $logo+b splith
    # bindsym $logo+v splitv

    # Switch the current container between different layout styles
    # bindsym $logo+s layout stacking
    # bindsym $logo+w layout tabbed
    # bindsym $logo+e layout toggle split

    # Make the current focus fullscreen
    bindsym Ctrl+$logo+Shift+f fullscreen toggle

    
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $logo+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $logo+minus scratchpad show
#
# Resizing containers:
#
    # Weirdly, adding a comment to these lines breaks the key mapping
    bindsym Ctrl+$logo+Left  resize shrink width 50px
    bindsym Ctrl+$logo+Right resize grow width 50px
    bindsym Ctrl+$logo+Up    resize grow height 50px
    bindsym Ctrl+$logo+Down  resize shrink height 50px

    # # Return to default mode
    # bindsym Ctrl+$logo+Return mode "default"
    # bindsym Ctrl+$logo+Escape mode "default"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# I'm using this instead of swaybar
exec waybar

# Should focus follow the mouse?
focus_follows_mouse no

#
# Client configuration
#
client.focused $base0D $base0D $base00 $base0D $base0D
client.unfocused $base04 $base04 $base05 $base04 $base04

for_window [shell=".*"] title_format "%title :: %shell"

assign [title=".*INBOX.*"] workspace number 2
# assign [class="Signal"] workspace number 2
assign [title=".*NixOS.*"] workspace "nixos"
assign [title=".*VMware.*"] workspace "vmware"

# Import some environment variables
include /etc/sway/config.d/*

# Automatically choose whether to split vertically or horizontally
exec_always autotiling

# clipboard manager
exec_always wl-paste -t text --watch clipman store --no-persist


